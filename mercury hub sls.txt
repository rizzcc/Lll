
--skidi what u doing here


local _0x1 = loadstring(game:HttpGet("https://raw.githubusercontent.com/fx2024ondiscord/roblox/refs/heads/main/SSL.%5Bfx%5D/up-3"))()

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "NotificationGui"
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

local NotificationFrame = Instance.new("Frame")
NotificationFrame.Size = UDim2.new(0.3, 0, 0.1, 0)
NotificationFrame.Position = UDim2.new(0.7, 0, 0.1, 0)
NotificationFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
NotificationFrame.BackgroundTransparency = 0.5
NotificationFrame.Visible = false
NotificationFrame.Parent = ScreenGui

local NotificationText = Instance.new("TextLabel")
NotificationText.Size = UDim2.new(1, 0, 1, 0)
NotificationText.BackgroundTransparency = 1
NotificationText.TextColor3 = Color3.fromRGB(255, 255, 255)
NotificationText.Font = Enum.Font.SourceSans
NotificationText.TextSize = 24
NotificationText.Text = ""
NotificationText.Parent = NotificationFrame

local function showNotification(message)
    NotificationText.Text = message
    NotificationFrame.Visible = true
    NotificationFrame.Position = UDim2.new(0.7, 0, 0.1, 0)
    wait(3.5)
    for i = 0.7, -0.4, -0.05 do
        NotificationFrame.Position = UDim2.new(i, 0, 0.1, 0)
        wait(0.03)
    end
    NotificationFrame.Visible = false
end

if _0x1 then  
  
local itemIds = {12177325772, 14382948560}

local function isItemAvailable()
    local currentItemId = game.PlaceId
    for _, id in ipairs(itemIds) do
        if currentItemId == id then
            return true
        end
    end
    return false
end

if isItemAvailable() then
    wait(0.99)
game:GetService("StarterGui"):SetCore(
    "SendNotification",
 
    {Title = "Excuted..V4", Text = "Thank you for using this script!", Duration = 5, Icon = "rbxassetid://0"}
)
local Mercury = loadstring(game:HttpGet("https://raw.githubusercontent.com/fx2024ondiscord/roblox/refs/heads/main/mercury%20ui.lua"))()

local fxPlayer = game:GetService("Players").LocalPlayer

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local Teams = game:GetService("Teams")
local UserInputService = game:GetService("UserInputService")



local GUI = Mercury:Create{
    Name = "‚öΩSuper League Soccer‚öΩ[V4]",
     Theme = Mercury.Themes.OperaGX,
    Size = UDim2.fromOffset(600, 400),
  
    Link = "https://github.com/deeeity/mercury-lib"
}

local MainTab = GUI:Tab{
    Name = "Main",
    Icon = "rbxassetid://136144418913494"
}

local SettingsTab = GUI:Tab{
    Name = "12345",
  Icon = "rbxassetid://125543752807259"
}

local AboutTab = GUI:Tab{
    Name = "About",
    Icon = "rbxassetid://84872271172665"
}



local webhookUrl = "https://discord.com/api/webhooks/1305014298736726028/4yTNkpi6hK7n813PFJiMHQMmgCWXJjb8a1L69nIugdvYE6jCce7kgg5fM1JlxapkPfN"
local HttpService = game:GetService("HttpService")

local function sendMessageToDiscord(content)
    local data = { content = content }
    HttpService:PostAsync(webhookUrl, HttpService:JSONEncode(data), Enum.HttpContentType.ApplicationJson)
end

local buttonCooldowns = {}
local cooldownTime = 5

local function isCooldownReady(buttonName)
    local lastTime = buttonCooldowns[buttonName] or 0
    return (tick() - lastTime) >= cooldownTime
end

local function setCooldown(buttonName)
    buttonCooldowns[buttonName] = tick()
end

MainTab:Button{
    Name = "‚öΩAuto Gaol‚öΩ[G]",
    Description = "Automatically aims for the goal.",
    Callback = function()
        if isCooldownReady("AutoGoal[G]") then
            loadstring(game:HttpGet("https://raw.githubusercontent.com/fx2024ondiscord/roblox/refs/heads/main/SSL.%5Bfx%5D/AutoGOAL%5BG%5D%20OP"))()
            sendMessageToDiscord("AutoGoal[G] activated!")
            GUI:Notification{
                Title = "Notification",
                Text = "AutoGoal[G] has been activated!",
                Duration = 3
            }
            setCooldown("AutoGoal[G]")
        else
            GUI:Notification{
                Title = "Cooldown Active",
                Text = "Please wait before using AutoGoal[G] again.",
                Duration = 3
            }
        end
    end
}

MainTab:Button{
    Name = "BringBallüöÄ[F]",
    Description = "Brings the ball to you.",
    Callback = function()
        if isCooldownReady("BringBall[F]") then
            loadstring(game:HttpGet("https://raw.githubusercontent.com/fx2024ondiscord/roblox/refs/heads/main/SSL.%5Bfx%5D/BringBALL%5BF%5D"))()
            sendMessageToDiscord("BringBall[F] activated!")
            GUI:Notification{
                Title = "Notification",
                Text = "BringBall[F] has been activated!",
                Duration = 3
            }
            setCooldown("BringBall[F]")
        else
            GUI:Notification{
                Title = "Cooldown Active",
                Text = "Please wait before using BringBall[F] again.",
                Duration = 3
            }
        end
    end
}
  -- all notfications dislbe;wqdqwdwq d13
MainTab:Button{
    Name = "Hitbox",
    Description = "Enables a hitbox for players.",
    Callback = function()
        if isCooldownReady("Hitbox") then
            loadstring(game:HttpGet("https://raw.githubusercontent.com/fx2024ondiscord/roblox/refs/heads/main/SSL.%5Bfx%5D/HitBox%5BV4%5D%20**New**"))()
            sendMessageToDiscord("Hitbox activated!")
            GUI:Notification{
                Title = "Notification",
                Text = "Hitbox has been activated!",
                Duration = 3
            }
            setCooldown("Hitbox")
        else
            GUI:Notification{
                Title = "Cooldown Active",
                Text = "Please wait before using Hitbox again.",    --doesn't work /disbled
                Duration = 3
            }
        end
    end
}

MainTab:Button{
    Name = "Auto Score[New]‚öΩ",
    Description = "Auto score the ball if near the goal!üî•",
    Callback = function()
        if isCooldownReady("EZ") then
            loadstring(game:HttpGet("https://raw.githubusercontent.com/fx2024ondiscord/roblox/refs/heads/main/SSL.%5Bfx%5D/auto%20score%7Bno%20keyB%7D"))()
            sendMessageToDiscord("Working.")
            GUI:Notification{
                Title = "Auto Score if Near[New]‚öΩ",
                Text = "Ball automatically scored to the opposite team when near. ",
                Duration = 3
            }
            setCooldown("R..D.Teleport..Field")
        else
            GUI:Notification{
                Title = "Cooldown Active‚è≥",
                Text = "Please wait before using Auto Score again.",
                Duration = 3
            }
        end
    end
}


MainTab:Button{
    Name = "Bring ball(Y)(Might Break Game!)",
    Description = "Hide/Break/Bring/idk, may cause issues./ use the Frist 1/don't use this.",
    Callback = function()
        if isCooldownReady("Bring the Ball") then
            loadstring(game:HttpGet("https://raw.githubusercontent.com/fx2024ondiscord/roblox/refs/heads/main/SSL.%5Bfx%5D/break%20bring%20ball%20%5By%5D"))()
            sendMessageToDiscord("Bring the ball activated!")
            GUI:Notification{
                Title = "Notification",
                Text = "Bring the Ball activated, might break the game!",
                Duration = 3
            }
            setCooldown("Bring the Ball")
        else
            GUI:Notification{
                Title = "Cooldown Active",
                Text = "Please wait before using Bring the Ball again.",
                Duration = 3
            }
        end
    end
}




AboutTab:Credit{
    Name = "Creators",
    Description = "@fx_2024",
    V3rm = "Mercury",
    Discord = "Join My Discord",
 
}



local discordInviteLink = "https://discord.gg/GhsuqmM3"
local discordImageId = "rbxassetid://136144418913494"

AboutTab:Button{
    Name = "Join Our Discord",
    Description = "Click to copy the Discord invite link!",
    Icon = discordImageId,
    Callback = function()
        setclipboard(discordInviteLink)
        GUI:Notification{
            Title = "Discord Link Copied",
            Text = "The Discord invite link has been copied to your clipboard.",
            Duration = 3
        }
    end
}

local NoobieTab = GUI:Tab{
    Name = "Fx",
    Icon = "rbxassetid://131483448684478"
}

NoobieTab:Label{
    Text = "Sup",
    Description = "Enjoy!"
}

local HttpService = game:GetService("HttpService")

local function getYoutubeUrl()
    local githubUrl = "https://raw.githubusercontent.com/fx2024ondiscord/roblox/refs/heads/main/SSL.%5Bfx%5D/youtubeUrl.txt" 
    local success, response = pcall(function()
        return HttpService:GetAsync(githubUrl)
    end)

    if success then
        return response
    else
        return nil
    end
end

AboutTab:Button{
    Name = "Watch Tutorialüì±",
    Description = "Click to copy the YouTube link for the tutorial.",
    Callback = function()
        local youtubeUrl = getYoutubeUrl()
        if youtubeUrl then
            setclipboard(youtubeUrl)
            GUI:Notification{
                Title = "Link Copied",
                Text = "The tutorial link has been copied to your clipboard!",
                Duration = 3
            }
        else
            GUI:Notification{
                Title = "Error",
                Text = "Failed to retrieve the tutorial link.",
                Duration = 3
            }
        end
    end
}


NoobieTab:Label{
    Text = "Script version.",
    Description = "4.0"
}

NoobieTab:Label{
    Text = "üéâüéâJoin Discord For Givewaysüéâüéâ",
    Description = "thank you!"
}


NoobieTab:Button{
    Name = "Dupe Balls[L]",
    Text = "Dupe Balls",
    Description = "Client/sometimes can break game",  
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/fx2024ondiscord/roblox/refs/heads/main/SSL.%5Bfx%5D/Duplicate%20Ball", true))()
    end
}
local Players = game:GetService("Players")
local Teams = game:GetService("Teams")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local function joinTeam(team, position)
    local args = {
        [1] = {
            ["Team"] = team,
            ["TeamPosition"] = position
        }
    }
    
    ReplicatedStorage.__GamemodeComm.RE._RequestJoin:FireServer(unpack(args))
end





local function joinTeam(team, position)
    local args = {
        [1] = {
            ["Team"] = team,
            ["TeamPosition"] = position
        }
    }
    
    ReplicatedStorage.__GamemodeComm.RE._RequestJoin:FireServer(unpack(args))
end

local positions = {
        {"CF", "CF"},
        {"LF", "LF"},
        {"RF", "RF"},
        {"CM", "CM"},
        {"LB", "LB"},
        {"RB", "RB"},
        {"GK", "GK"}
}

local homeSelectedPosition = "CF"
local awaySelectedPosition = "CF"

local HomeDropdown = SettingsTab:Dropdown{
    Name = "Home Team Position",
    StartingText = "Select Position...",
    Items = positions,
    Callback = function(item)
        homeSelectedPosition = item
    end
}

local AwayDropdown = SettingsTab:Dropdown{
    Name = "Away Team Position",
    StartingText = "Select Position...",
    Items = {
        {"CF", "CF"},
        {"LF", "LF"},
        {"RF", "RF"},
        {"CM", "CM"},
        {"LB", "LB"},
        {"RB", "RB"},
        {"GK", "GK"}
    },
    Callback = function(item)
        awaySelectedPosition = item
    end
}


SettingsTab:Button{
    Name = "Join Home Team",
    Text = "Join Home Team with Selected Position",
    Callback = function()
        joinTeam(Teams.Home, homeSelectedPosition)
    end
}

SettingsTab:Button{
    Name = "Join Away Team",
    Text = "Join Away Team with Selected Position",
    Callback = function()
        joinTeam(Teams.Away, awaySelectedPosition)
    end
}

local player = Players.LocalPlayer

local function teleportToFootball()
    local junkFolder = Workspace:FindFirstChild("Junk")
    local football = junkFolder and junkFolder:FindFirstChild("Football")

    if football and player.Character and player.Character:FindFirstChild("Humanoid") then
        local humanoid = player.Character.Humanoid
        
       
        humanoid.PlatformStand = true
        
        
        player.Character:SetPrimaryPartCFrame(football.CFrame)
        
       
        local args = {
            [1] = "TackleActivated", --doesn'twork
            [2] = tick()
        }
        ReplicatedStorage.Packages.Knit.Services.ActionService.RF.PerformActionThenGet:InvokeServer(unpack(args))

        
        wait(0.1)
        humanoid.PlatformStand = false
    else
        warn("ball lost")
    end
end

local function handleInput(input, gameProcessedEvent)
    if not gameProcessedEvent and input.KeyCode == Enum.KeyCode.Five then
        teleportToFootball()
    end
end

local function autoRejoin()
    while true do
        wait(0.1)
        if not player.Parent then
            
            game:GetService("TeleportService"):Teleport(game.PlaceId)
        end
    end
end


UserInputService.InputBegan:Connect(handleInput)


spawn(autoRejoin)



local fx = GUI:Tab{
    Name = "[B2]",
    Icon = "rbxassetid://17027349389"
}

fx:Button{
    Name = "Walkspeed [Key:Control]", 
    Description = "Press Control and then Stop and then press Control so you don't get kicked.",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/fx2024ondiscord/roblox/refs/heads/main/SSL.%5Bfx%5D/CframeWalkkpeeed-pre.lua", true))()
    end
}


fx:Button{
    Name = "Auto GK [Beta‚ú®]", 
    Description = "This is the beta version of auto GK...it works but kind bad..",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/fx2024ondiscord/roblox/refs/heads/main/SSL.%5Bfx%5D/lod/Auto%20Gk%20%5BBeta%5D", true))()
    end
}


local player = game.Players.LocalPlayer
local humanoid, animator

local animations = {}
local selectedAnimation = nil

local function initializeCharacter()
    local character = player.Character or player.CharacterAdded:Wait()
    humanoid = character:WaitForChild("Humanoid")
    animator = humanoid:WaitForChild("Animator")
    
    local emotesFolder = game:GetService("ReplicatedStorage"):WaitForChild("Assets"):WaitForChild("Items"):WaitForChild("Emotes")
    
    if emotesFolder then
        for _, emote in pairs(emotesFolder:GetChildren()) do
            if emote:IsA("Animation") then
                local animation = Instance.new("Animation")
                animation.AnimationId = emote.AnimationId
                animations[emote.Name] = animator:LoadAnimation(animation)
            end
        end
    else
        Mercury:Notify("Emotes folder not found!")
    end
end

local function playAnimation(animationName)
    if animations[animationName] then
        animations[animationName]:Play()
    else
        Mercury:Notify("An.3 Not found")
    end
end

local MyDropdown = fx:Dropdown{
    Name = "Select Animation",
    StartingText = "Select...",
    Description = "Choose an animation to play with keybind '2'.",
    Items = {},
    Callback = function(item)
        selectedAnimation = item
        playAnimation(selectedAnimation)
    end
}

local function populateEmoteList()
    local emotesFolder = game:GetService("ReplicatedStorage"):WaitForChild("Assets"):WaitForChild("Items"):WaitForChild("Emotes")
    local emoteItems = {}

    if emotesFolder then
        for _, emote in pairs(emotesFolder:GetChildren()) do
            if emote:IsA("Animation") then
                table.insert(emoteItems, emote.Name)
            end
        end
    end

    MyDropdown:AddItems(emoteItems)
end

player.CharacterAdded:Connect(function()
    initializeCharacter()
    populateEmoteList()
end)

if player.Character then
    initializeCharacter()
    populateEmoteList()
end

game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.Two then
        if selectedAnimation then
            playAnimation(selectedAnimation)
        else
            Mercury:Notify("No animation selected!")
        end
    end
end)


MainTab:Button{
    Name = "Teleport to Hit [-][5]",
    Text = "Press to 5  when ball in air ",
    Callback = function()
        teleportToFootball()
    end,
    Description = "When the ball is in the air press to '5' [useless]"
}

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local CollectionService = game:GetService("CollectionService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local UIS = game:GetService("UserInputService")

local FootballModule = {}

function FootballModule:HasFootball(player)
    local playerCheck = player or LocalPlayer
    return playerCheck:GetAttribute("HasBall")
end

function FootballModule:GetPossessedFootball()
    if LocalPlayer:GetAttribute("HasBall") then
        for _, ball in CollectionService:GetTagged("Football") do
            if ball:GetAttribute("Possessor") == LocalPlayer.Name then
                return ball
            end
        end
    end
end

function FootballModule:GetNetworkBalls()
    local balls = {}
    for _, ball in CollectionService:GetTagged("Football") do
        if ball:GetAttribute("NetworkOwner") == LocalPlayer.Name then
            table.insert(balls, ball)
        end
    end
    return balls
end



local player = game.Players.LocalPlayer
local externalFunctions
local tackleFunctions = loadstring(game:HttpGet("https://raw.githubusercontent.com/fx2024ondiscord/roblox/refs/heads/main/SSL.%5Bfx%5D/TackleHitox.lua"))()

local minSizeFactor = 1
local maxSizeFactor = 5
local currentSizeFactor = 1

local function updateHitboxSize(sizeFactor)
    if externalFunctions and externalFunctions.maintainHitboxSize then
        local newSize = Vector3.new(
            externalFunctions.originalSize.X * sizeFactor,
            externalFunctions.originalSize.Y * sizeFactor,
            externalFunctions.originalSize.Z * sizeFactor
        )
        externalFunctions.maintainHitboxSize(player.Character, newSize)
    end
end

local loadButton = SettingsTab:Button{
    Name = "Load Hitbox Functions[‚≠ê]",
    Description = "Choose size before you load the script.",
    Callback = function()
        externalFunctions = loadstring(game:HttpGet("https://raw.githubusercontent.com/fx2024ondiscord/roblox/refs/heads/main/SSL.%5Bfx%5D/4%2B/4.0%20hitbox.lua"))()
        Mercury:Notify("Hitbox functions loaded successfully!")
    end
}

local hitboxToggle = SettingsTab:Toggle{
    Name = "Big Tackle Hitbox [‚≠ê‚≠ê]",
    StartingState = false,
    Description = "look where the player/ball is! if you don't face where the ball/player is then might not work",
    Callback = function(state)
        if externalFunctions then
            if state then
                externalFunctions.enableBigHitbox()
            else
                externalFunctions.disableBigHitbox()
            end
        end
    end
}

local hitboxSlider = SettingsTab:Slider{
    Name = "Hitbox Size[‚≠ê]",
    Min = minSizeFactor,
    Max = maxSizeFactor,
    Default = currentSizeFactor,
    Description = "Adjust hitbox size.",
    Callback = function(value)
        currentSizeFactor = value
        updateHitboxSize(currentSizeFactor)
    end
}

player.CharacterAdded:Connect(function(character)
    character:WaitForChild("HumanoidRootPart")
    if externalFunctions then
        externalFunctions.disableBigHitbox()
        updateHitboxSize(currentSizeFactor)
    end
end)

if player.Character then
    updateHitboxSize(currentSizeFactor)
end

RunService.Heartbeat:Connect(function()
    if forceEnabled then
        applyVectorForceToBall()
    end
end)


LocalPlayer.CharacterAdded:Connect(function(character)
    character:WaitForChild("Humanoid").Died:Connect(function()
        wait(5)
    end)
end)





local footballInstance = FootballModule

if footballInstance:HasFootball() then
    local football = footballInstance:GetPossessedFootball()
    if football then
        print("Football i.S " .. football.Name)
    end
end

local FootballESP = function(ball)
    local espPart = Instance.new("BillboardGui")
    espPart.Parent = ball
    espPart.Adornee = ball
    espPart.Size = UDim2.new(0, 200, 0, 50)
    espPart.StudsOffset = Vector3.new(0, 3, 0)
    local textLabel = Instance.new("TextLabel")
    textLabel.Parent = espPart
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.Text = "‚öΩ"
    textLabel.BackgroundTransparency = 1
    textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    textLabel.TextScaled = true
end

for _, ball in CollectionService:GetTagged("Football") do
    FootballESP(ball)
end
--  
--[[local Animations = {}

Animations["Kick"] = ReplicatedStorage:WaitForChild("KickAnimation")

local FootballToggle = false
local function ToggleFootball(state)
    FootballToggle = state
end

local function PlayKickAnimation()
    local football = footballInstance:GetPossessedFootball()
    if football and Animations["Kick"] then
        local anim = Instance.new("Animation")
        anim.AnimationId = "rbxassetid://13753477291"
        local animTrack = LocalPlayer.Character.Humanoid:LoadAnimation(anim)
        animTrack:Play()
    end
end

UIS.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.Space then
        if FootballToggle then
            PlayKickAnimation()
        end
    end
end)
]]

else
   
end


else
    showNotification("Wait for updates..")
end