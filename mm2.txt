-- MM2 Professional Hub - Ultra Modern GUI
-- Created with advanced animations, notifications, and professional design

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Temizlik işlemi (eski GUI'ları kaldır)
if PlayerGui:FindFirstChild("MM2ProfessionalHub") then
    PlayerGui:FindFirstChild("MM2ProfessionalHub"):Destroy()
end

-- Ana ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "MM2ProfessionalHub"
ScreenGui.Parent = PlayerGui
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Notification System
local NotificationFrame = Instance.new("Frame")
NotificationFrame.Name = "NotificationFrame"
NotificationFrame.Parent = ScreenGui
NotificationFrame.BackgroundTransparency = 1
NotificationFrame.Position = UDim2.new(1, -350, 0, 20)
NotificationFrame.Size = UDim2.new(0, 330, 1, -40)
NotificationFrame.ZIndex = 1000

local NotificationLayout = Instance.new("UIListLayout")
NotificationLayout.Parent = NotificationFrame
NotificationLayout.FillDirection = Enum.FillDirection.Vertical
NotificationLayout.Padding = UDim.new(0, 10)
NotificationLayout.VerticalAlignment = Enum.VerticalAlignment.Top

-- Notification Fonksiyonu
local function createNotification(title, message, duration, notificationType)
    local notification = Instance.new("Frame")
    notification.Parent = NotificationFrame
    notification.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    notification.BorderSizePixel = 0
    notification.Size = UDim2.new(1, 0, 0, 80)
    notification.Position = UDim2.new(1, 0, 0, 0)
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = notification
    
    local stroke = Instance.new("UIStroke")
    stroke.Parent = notification
    stroke.Thickness = 1
    
    -- Notification tipine göre renk
    if notificationType == "success" then
        stroke.Color = Color3.fromRGB(0, 255, 127)
    elseif notificationType == "error" then
        stroke.Color = Color3.fromRGB(255, 69, 58)
    elseif notificationType == "warning" then
        stroke.Color = Color3.fromRGB(255, 214, 10)
    else
        stroke.Color = Color3.fromRGB(100, 200, 255)
    end
    
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Parent = notification
    titleLabel.BackgroundTransparency = 1
    titleLabel.Position = UDim2.new(0, 15, 0, 8)
    titleLabel.Size = UDim2.new(1, -30, 0, 25)
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.Text = title
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextScaled = true
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    
    local messageLabel = Instance.new("TextLabel")
    messageLabel.Parent = notification
    messageLabel.BackgroundTransparency = 1
    messageLabel.Position = UDim2.new(0, 15, 0, 35)
    messageLabel.Size = UDim2.new(1, -30, 0, 35)
    messageLabel.Font = Enum.Font.Gotham
    messageLabel.Text = message
    messageLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    messageLabel.TextScaled = true
    messageLabel.TextXAlignment = Enum.TextXAlignment.Left
    messageLabel.TextWrapped = true
    
    -- Giriş animasyonu
    local slideIn = TweenService:Create(notification, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
        Position = UDim2.new(0, 0, 0, 0)
    })
    slideIn:Play()
    
    -- Çıkış animasyonu
    wait(duration or 3)
    local slideOut = TweenService:Create(notification, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
        Position = UDim2.new(1, 0, 0, 0)
    })
    slideOut:Play()
    slideOut.Completed:Connect(function()
        notification:Destroy()
    end)
end

-- Ana Frame
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
MainFrame.BorderSizePixel = 0
MainFrame.Position = UDim2.new(0.5, -400, 0.5, -250)
MainFrame.Size = UDim2.new(0, 800, 0, 500)
MainFrame.Active = true
MainFrame.Visible = false

local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, 15)
MainCorner.Parent = MainFrame

local MainStroke = Instance.new("UIStroke")
MainStroke.Parent = MainFrame
MainStroke.Color = Color3.fromRGB(100, 100, 150)
MainStroke.Thickness = 2

-- Glow Effect
local Glow = Instance.new("ImageLabel")
Glow.Parent = MainFrame
Glow.BackgroundTransparency = 1
Glow.Position = UDim2.new(0, -15, 0, -15)
Glow.Size = UDim2.new(1, 30, 1, 30)
Glow.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
Glow.ImageColor3 = Color3.fromRGB(100, 100, 255)
Glow.ImageTransparency = 0.8
Glow.ZIndex = -1

-- Title Bar
local TitleBar = Instance.new("Frame")
TitleBar.Parent = MainFrame
TitleBar.BackgroundColor3 = Color3.fromRGB(30, 30, 45)
TitleBar.BorderSizePixel = 0
TitleBar.Size = UDim2.new(1, 0, 0, 60)

local TitleCorner = Instance.new("UICorner")
TitleCorner.CornerRadius = UDim.new(0, 15)
TitleCorner.Parent = TitleBar

local TitleFix = Instance.new("Frame")
TitleFix.Parent = TitleBar
TitleFix.BackgroundColor3 = Color3.fromRGB(30, 30, 45)
TitleFix.BorderSizePixel = 0
TitleFix.Position = UDim2.new(0, 0, 0.5, 0)
TitleFix.Size = UDim2.new(1, 0, 0.5, 0)

local TitleLabel = Instance.new("TextLabel")
TitleLabel.Parent = TitleBar
TitleLabel.BackgroundTransparency = 1
TitleLabel.Position = UDim2.new(0, 20, 0, 10)
TitleLabel.Size = UDim2.new(0, 200, 0, 40)
TitleLabel.Font = Enum.Font.GothamBold
TitleLabel.Text = "MM2 HUB"
TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleLabel.TextScaled = true
TitleLabel.TextXAlignment = Enum.TextXAlignment.Left

-- Subtitle
local SubtitleLabel = Instance.new("TextLabel")
SubtitleLabel.Parent = TitleBar
SubtitleLabel.BackgroundTransparency = 1
SubtitleLabel.Position = UDim2.new(0, 230, 0, 15)
SubtitleLabel.Size = UDim2.new(0, 200, 0, 30)
SubtitleLabel.Font = Enum.Font.Gotham
SubtitleLabel.Text = "Professional Edition"
SubtitleLabel.TextColor3 = Color3.fromRGB(150, 150, 200)
SubtitleLabel.TextScaled = true
SubtitleLabel.TextXAlignment = Enum.TextXAlignment.Left

-- Close Button
local CloseButton = Instance.new("TextButton")
CloseButton.Parent = TitleBar
CloseButton.BackgroundColor3 = Color3.fromRGB(255, 69, 58)
CloseButton.BorderSizePixel = 0
CloseButton.Position = UDim2.new(1, -50, 0, 15)
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Font = Enum.Font.GothamBold
CloseButton.Text = "×"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextScaled = true

local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(0, 15)
CloseCorner.Parent = CloseButton

-- Minimize Button
local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Parent = TitleBar
MinimizeButton.BackgroundColor3 = Color3.fromRGB(255, 214, 10)
MinimizeButton.BorderSizePixel = 0
MinimizeButton.Position = UDim2.new(1, -90, 0, 15)
MinimizeButton.Size = UDim2.new(0, 30, 0, 30)
MinimizeButton.Font = Enum.Font.GothamBold
MinimizeButton.Text = "-"
MinimizeButton.TextColor3 = Color3.fromRGB(0, 0, 0)
MinimizeButton.TextScaled = true

local MinimizeCorner = Instance.new("UICorner")
MinimizeCorner.CornerRadius = UDim.new(0, 15)
MinimizeCorner.Parent = MinimizeButton

-- Content Area
local ContentFrame = Instance.new("Frame")
ContentFrame.Parent = MainFrame
ContentFrame.BackgroundTransparency = 1
ContentFrame.Position = UDim2.new(0, 0, 0, 60)
ContentFrame.Size = UDim2.new(1, 0, 1, -60)

-- Sidebar
local Sidebar = Instance.new("Frame")
Sidebar.Parent = ContentFrame
Sidebar.BackgroundColor3 = Color3.fromRGB(25, 25, 40)
Sidebar.BorderSizePixel = 0
Sidebar.Size = UDim2.new(0, 200, 1, 0)

local SidebarCorner = Instance.new("UICorner")
SidebarCorner.CornerRadius = UDim.new(0, 10)
SidebarCorner.Parent = Sidebar

-- Category Button
local CategoryButton = Instance.new("TextButton")
CategoryButton.Parent = Sidebar
CategoryButton.BackgroundColor3 = Color3.fromRGB(100, 100, 255)
CategoryButton.BorderSizePixel = 0
CategoryButton.Position = UDim2.new(0, 10, 0, 20)
CategoryButton.Size = UDim2.new(1, -20, 0, 50)
CategoryButton.Font = Enum.Font.GothamBold
CategoryButton.Text = "MAIN"
CategoryButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CategoryButton.TextScaled = true

local CategoryCorner = Instance.new("UICorner")
CategoryCorner.CornerRadius = UDim.new(0, 10)
CategoryCorner.Parent = CategoryButton

-- Main Content
local MainContent = Instance.new("Frame")
MainContent.Parent = ContentFrame
MainContent.BackgroundTransparency = 1
MainContent.Position = UDim2.new(0, 210, 0, 10)
MainContent.Size = UDim2.new(1, -220, 1, -20)

-- Function Buttons Container
local ButtonsFrame = Instance.new("ScrollingFrame")
ButtonsFrame.Parent = MainContent
ButtonsFrame.BackgroundTransparency = 1
ButtonsFrame.BorderSizePixel = 0
ButtonsFrame.Size = UDim2.new(1, 0, 1, 0)
ButtonsFrame.CanvasSize = UDim2.new(0, 0, 0, 300)
ButtonsFrame.ScrollBarThickness = 8
ButtonsFrame.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 150)

local ButtonLayout = Instance.new("UIListLayout")
ButtonLayout.Parent = ButtonsFrame
ButtonLayout.FillDirection = Enum.FillDirection.Vertical
ButtonLayout.Padding = UDim.new(0, 15)
ButtonLayout.SortOrder = Enum.SortOrder.LayoutOrder

-- Global Variables
local activeFloatingButtons = {}
local ESPEnabled = false

-- Helper Functions
function findMurderer()
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Backpack:FindFirstChild("Knife") or (player.Character and player.Character:FindFirstChild("Knife")) then
            return player
        end
    end
    return nil
end

function findSheriff()
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Backpack:FindFirstChild("Gun") or (player.Character and player.Character:FindFirstChild("Gun")) then
            return player
        end
    end
    return nil
end

function getPredictedPosition(player, offset)
    local playerHRP = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if not playerHRP then return Vector3.new(0, 0, 0) end
    local velocity = playerHRP.AssemblyLinearVelocity
    return playerHRP.Position + velocity * offset
end

function getMap()
    for _, obj in ipairs(workspace:GetChildren()) do
        if obj:FindFirstChild("CoinContainer") and obj:FindFirstChild("Spawns") then
            return obj
        end
    end
    return nil
end

-- Create Floating Button Function
local function createFloatingButton(text, callback, buttonType)
    local floatingButton = Instance.new("TextButton")
    floatingButton.Parent = ScreenGui
    floatingButton.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
    floatingButton.BorderSizePixel = 0
    floatingButton.Position = UDim2.new(0.5, -75, 0.5, -25)
    floatingButton.Size = UDim2.new(0, 150, 0, 50)
    floatingButton.Font = Enum.Font.GothamBold
    floatingButton.Text = text
    floatingButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    floatingButton.TextScaled = true
    floatingButton.Active = true
    floatingButton.Draggable = true
    floatingButton.ZIndex = 500
    
    local floatingCorner = Instance.new("UICorner")
    floatingCorner.CornerRadius = UDim.new(0, 10)
    floatingCorner.Parent = floatingButton
    
    local floatingStroke = Instance.new("UIStroke")
    floatingStroke.Parent = floatingButton
    floatingStroke.Color = Color3.fromRGB(100, 200, 255)
    floatingStroke.Thickness = 2
    
    -- Giriş animasyonu
    floatingButton.Size = UDim2.new(0, 0, 0, 0)
    local scaleIn = TweenService:Create(floatingButton, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
        Size = UDim2.new(0, 150, 0, 50)
    })
    scaleIn:Play()
    
    floatingButton.MouseButton1Click:Connect(callback)
    
    return floatingButton
end

-- Create Main Button Function
local function createMainButton(text, callback, buttonType)
    local button = Instance.new("TextButton")
    button.Parent = ButtonsFrame
    button.BackgroundColor3 = Color3.fromRGB(35, 35, 55)
    button.BorderSizePixel = 0
    button.Size = UDim2.new(1, 0, 0, 60)
    button.Font = Enum.Font.GothamBold
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextScaled = true
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 10)
    buttonCorner.Parent = button
    
    local buttonStroke = Instance.new("UIStroke")
    buttonStroke.Parent = button
    buttonStroke.Color = Color3.fromRGB(70, 70, 100)
    buttonStroke.Thickness = 1
    
    -- Hover effects
    button.MouseEnter:Connect(function()
        local hoverTween = TweenService:Create(button, TweenInfo.new(0.2), {
            BackgroundColor3 = Color3.fromRGB(50, 50, 80)
        })
        hoverTween:Play()
    end)
    
    button.MouseLeave:Connect(function()
        local leaveTween = TweenService:Create(button, TweenInfo.new(0.2), {
            BackgroundColor3 = Color3.fromRGB(35, 35, 55)
        })
        leaveTween:Play()
    end)
    
    -- Toggle functionality for special buttons
    if buttonType == "toggle" then
        local isActive = false
        button.MouseButton1Click:Connect(function()
            isActive = not isActive
            if isActive then
                if activeFloatingButtons[text] then
                    activeFloatingButtons[text]:Destroy()
                end
                activeFloatingButtons[text] = createFloatingButton(text, callback, buttonType)
                createNotification("Function Activated", text .. " has been enabled!", 2, "success")
            else
                if activeFloatingButtons[text] then
                    local destroyTween = TweenService:Create(activeFloatingButtons[text], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
                        Size = UDim2.new(0, 0, 0, 0)
                    })
                    destroyTween:Play()
                    destroyTween.Completed:Connect(function()
                        activeFloatingButtons[text]:Destroy()
                        activeFloatingButtons[text] = nil
                    end)
                end
                createNotification("Function Deactivated", text .. " has been disabled!", 2, "warning")
            end
        end)
    elseif buttonType == "esp" then
        button.MouseButton1Click:Connect(function()
            callback()
            if ESPEnabled then
                button.Text = text .. " (ON)"
                button.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
                createNotification("ESP Enabled", "Player ESP is now active!", 2, "success")
            else
                button.Text = text .. " (OFF)"
                button.BackgroundColor3 = Color3.fromRGB(35, 35, 55)
                createNotification("ESP Disabled", "Player ESP has been turned off!", 2, "info")
            end
        end)
    else
        button.MouseButton1Click:Connect(callback)
    end
    
    return button
end

-- Main Functions
local function shootMurderer()
    local murderer = findMurderer()
    if not murderer then
        createNotification("Error", "No murderer found to shoot!", 3, "error")
        return
    end
    
    if not LocalPlayer.Character:FindFirstChild("Gun") then
        local gun = LocalPlayer.Backpack:FindFirstChild("Gun")
        if gun then
            LocalPlayer.Character:FindFirstChild("Humanoid"):EquipTool(gun)
        else
            createNotification("Error", "You don't have the gun!", 3, "error")
            return
        end
    end
    
    local murdererHRP = murderer.Character:FindFirstChild("HumanoidRootPart")
    if not murdererHRP then
        createNotification("Error", "Could not target murderer!", 3, "error")
        return
    end
    
    local predictedPosition = getPredictedPosition(murderer, 0.2)
    local args = {
        [1] = 1,
        [2] = predictedPosition,
        [3] = "AH2"
    }
    
    LocalPlayer.Character.Gun.KnifeLocal.CreateBeam.RemoteFunction:InvokeServer(unpack(args))
    createNotification("Shot Fired", "Shooting at the murderer!", 2, "success")
end

local function grabGun()
    local map = getMap()
    if map and map:FindFirstChild("GunDrop") then
        local gunDrop = map:FindFirstChild("GunDrop")
        local previousPosition = LocalPlayer.Character:GetPivot()
        LocalPlayer.Character:MoveTo(gunDrop.Position)
        LocalPlayer.Backpack.ChildAdded:Wait()
        LocalPlayer.Character:PivotTo(previousPosition)
        createNotification("Gun Grabbed", "Successfully grabbed the gun!", 2, "success")
    else
        createNotification("Error", "No gun available to grab!", 3, "error")
    end
end

local function toggleESP()
    ESPEnabled = not ESPEnabled
    if ESPEnabled then
        for _, v in ipairs(Players:GetPlayers()) do
            if v.Character and not v.Character:FindFirstChild("PlayerESP") then
                local highlight = Instance.new("Highlight", v.Character)
                highlight.Name = "PlayerESP"
                highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                
                if v == findMurderer() then
                    highlight.FillColor = Color3.fromRGB(255, 0, 0)
                elseif v == findSheriff() then
                    highlight.FillColor = Color3.fromRGB(0, 150, 255)
                else
                    highlight.FillColor = Color3.fromRGB(0, 255, 0)
                end
            end
        end
    else
        for _, v in ipairs(Players:GetPlayers()) do
            if v.Character and v.Character:FindFirstChild("PlayerESP") then
                v.Character:FindFirstChild("PlayerESP"):Destroy()
            end
        end
    end
end

-- Create buttons
createMainButton("Shoot Murderer", shootMurderer, "toggle")
createMainButton("Grab Gun", grabGun, "toggle")
createMainButton("Toggle ESP", toggleESP, "esp")

-- GUI Controls
local dragStart, startPos = nil, nil
local dragging = false

TitleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

CloseButton.MouseButton1Click:Connect(function()
    local closeTween = TweenService:Create(MainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
        Size = UDim2.new(0, 0, 0, 0),
        Position = UDim2.new(0.5, 0, 0.5, 0)
    })
    closeTween:Play()
    closeTween.Completed:Connect(function()
        ScreenGui:Destroy()
    end)
end)

local minimized = false
MinimizeButton.MouseButton1Click:Connect(function()
    minimized = not minimized
    if minimized then
        local minimizeTween = TweenService:Create(MainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
            Size = UDim2.new(0, 800, 0, 60)
        })
        minimizeTween:Play()
        ContentFrame.Visible = false
    else
        local expandTween = TweenService:Create(MainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
            Size = UDim2.new(0, 800, 0, 500)
        })
        expandTween:Play()
        ContentFrame.Visible = true
    end
end)

-- Toggle GUI with Right Shift
UserInputService.InputBegan:Connect(function(key)
    if key.KeyCode == Enum.KeyCode.RightShift then
        if MainFrame.Visible then
            local hideTween = TweenService:Create(MainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
                Position = UDim2.new(0.5, -400, -1, -250)
            })
            hideTween:Play()
            hideTween.Completed:Connect(function()
                MainFrame.Visible = false
            end)
        else
            MainFrame.Visible = true
            MainFrame.Position = UDim2.new(0.5, -400, -1, -250)
            local showTween = TweenService:Create(MainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
                Position = UDim2.new(0.5, -400, 0.5, -250)
            })
            showTween:Play()
        end
    end
end)

-- Başlangıç animasyonu
MainFrame.Size = UDim2.new(0, 0, 0, 0)
MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
MainFrame.Visible = true

local startupTween = TweenService:Create(MainFrame, TweenInfo.new(0.8, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
    Size = UDim2.new(0, 800, 0, 500),
    Position = UDim2.new(0.5, -400, 0.5, -250)
})
startupTween:Play()

-- Başlangıç bildirimi
spawn(function()
    wait(1)
    createNotification("MM2 Hub Loaded", "Welcome to the Professional Edition!", 4, "success")
    wait(2)
    createNotification("Controls", "Press Right Shift to toggle GUI", 3, "info")
end)pşnge